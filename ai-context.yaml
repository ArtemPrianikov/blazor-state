ai-context:
  project:
    name: Blazor-State
    description: A library for managing state in Blazor applications.
    pattern: Mediator Pattern
    conventions:
      - State is in a separate file and defined in its own partial class.
      - Action and Handler are grouped together in a single file, nested within the same partial class as the State.
      - Actions are nested classes within the State they mutate.
      - State should NOT be mutated by anything other than handlers.
      - Handlers are nested classes within the State they mutate.
      - State classes should override the Initialize() method.
      - Handlers should inherit from BlazorState.Handlers.ActionHandler.
    repo_structure:
      - Source
        - BlazorState
          - Base
            - Action
            - ActionHandler
          - Components
            - BlazorStateComponent
          - Features
            - JavaScriptInterop
            - Routing
          - Pipeline
            - ReduxDevTools
          - State
            - State
          - Store
            - Store
          - Subscriptions
    usage_structure:      
      - Features
        - FeatureName
          - FeatureState.cs
          - FeatureState.Debug.cs
          - Actions
            - FeatureState.ActionName.cs 
              - # Contains both the Action and Handler as nested classes within a static class named after the Action.
              - # Example: CompleteProcessing.Action and CompleteProcessing.Handler are nested within CompleteProcessing static class.
  documentation:
    - Overview.md
    - Features/Features.md
    - DevOps/DevOps.md
    - Contributing/Overview.md
    - Samples/01-StateActionsHandlers/Readme.md
  scripts:
    powershell:
      - None (Assumption, correct if wrong)
  database:
    type: None (Assumption, correct if wrong)
